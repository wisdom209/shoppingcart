{"version":3,"sources":["Redux/Reducers/CartItemsReducer.js","Redux/Reducers/QuantityReducer.js","Redux/Reducers/SelectedItemsReducer.js","Redux/Reducers/GlobalNameReducer.js","Redux/Reducers/ShippingDetailsReducer.js","Redux/Reducers/AllProductsReducer.js","Redux/Actions.js/UpdateCartItem.js","Redux/Actions.js/UpdateQuantity.js","Screens/SelectedProduct.js","Redux/Actions.js/UpdateSelectedItems.js","Redux/Actions.js/UpdateAllProducts.js","Redux/Reducers/FilterProductReducer.js","Redux/Actions.js/FilterActions.js","Screens/HomeScreen.js","Screens/CartScreen.js","Redux/Actions.js/UpdateGlobalName.js","Components/InputDiv.js","Screens/SignInScreen.js","Screens/CreateAccount.js","Screens/CreateProduct.js","Components/StepComponent.js","Redux/Actions.js/UpdateShippingDetails.js","Screens/ShippingScreen.js","Screens/PaymentScreen.js","Screens/PlaceOrderScreen.js","Components/Title.js","Redux/Actions.js/ResetAction.js","Components/SideBar.js","App.js","Redux/Store.js","index.js"],"names":["UPDATE_T0_CART","DELETE_FROM_CART","CartItemsReducer","state","type","payload","filter","val","_id","RESET","UPDATE_QUANTITY_IN_CART","DELETE_QUANTITY_iN_CART","QuantityReducer","Object","assign","UPDATE_SELECTION","DELETE_SELECTION","SelectedItemsReducer","SET_GLOBAL_NAME","GlobalNameReducer","Cookie","get","UPDATE_SHIPPING_DETAILS","ShippingDetailsReducer","GET_ALL_PRODUCTS","AllProductsReducer","require","UpdateQuantity","SelectedProduct","selectedProduct","useSelector","dispatch","useDispatch","useState","initialSelection","setInitialSelection","addToCart","item","style","margin","to","className","src","image","alt","title","price","description","value","onChange","e","target","Array","quantity","fill","map","v","index","key","onClick","UpdateSelectedItems","UpdateAllProducts","FilterProductReducer","category","filterAll","HomeScreen","filteredProducts","useEffect","axios","then","response","data","length","UpdateCartItems","CartScreen","props","cartItems","selectedQuantity","globalName","totalItems","sum","Number","deleteItem","UpdateDelete","i","toFixed","padding","priceArray","totalPrice","disabled","UpdateGlobalName","InputDiv","htmlFor","tag","required","SignInScreen","email","setEmail","password","setPassword","validationError","setValidationError","onSubmit","preventDefault","post","token","msg","error","set","name","location","pathname","includes","history","push","catch","err","color","CreateAccount","setName","confirmPassword","setConfirmPassword","CreateProduct","products","updateProduct","setUpdateProduct","identity","setIdentity","setPrice","setCategory","setImage","brand","setBrand","setDescription","setQuantity","rating","setRating","numOfReviews","setNumOfReviews","showProducts","setShowProducts","id","delete","params","headers","authorization","responser","console","log","deleteProduct","productToSend","put","setTimeout","marginLeft","StepComponent","step1","step2","step3","step4","UpdateShippingDetails","ShippingScreen","shippingDetails","borderTop","address","city","postalCode","country","paymentMethod","PaymentScreen","setPaymentMethod","alert","checked","PlaceOrderScreen","calculateTotalPrice","PriceArray","calculateTax","calculateShipping","display","justifyContent","fontSize","flexWrap","Title","showSideBar","SideBar","ref","sideBarRef","sideBarClass","removeSideBar","App","setsideBarClass","isAuthenticated","useRef","document","addEventListener","handleSideBarOutsideClick","removeEventListener","current","contains","path","component","exact","persistConfig","storage","storageSession","rootReducer","combineReducers","persistedReducer","persistReducer","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById"],"mappings":"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","file":"static/js/main.c73a6720.chunk.js","sourcesContent":["import { RESET } from \"./AllProductsReducer\";\r\n\r\nexport const UPDATE_T0_CART = \"UPDATE_TO_CART\";\r\nexport const DELETE_FROM_CART = \"DELETE_FROM_CART\";\r\n\r\nconst CartItemsReducer = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n        case UPDATE_T0_CART:\r\n            // return [ ...state, payload ].filter((val, index)=>[...state,payload].indexOf(val) === index);\r\n            return [ ...[ ...state ].filter((val) => val._id !== payload._id), payload ];\r\n        case DELETE_FROM_CART:\r\n            return state.filter((val) => val._id !== payload._id);\r\n        case RESET:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default CartItemsReducer;\r\n","import { RESET } from \"./AllProductsReducer\";\r\n\r\nexport const UPDATE_QUANTITY_IN_CART = \"UPDATE_QUANTITY_IN_CART\";\r\nexport const DELETE_QUANTITY_iN_CART = \"DELETE_QUANTITY_IN_CART\";\r\n\r\nconst QuantityReducer = (state = {}, { type, payload }) => {\r\n    switch (type) {\r\n        case UPDATE_QUANTITY_IN_CART:\r\n            return Object.assign({}, state, payload);\r\n        case DELETE_QUANTITY_iN_CART:\r\n            return payload;\r\n        case RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default QuantityReducer;\r\n","import { RESET } from \"./AllProductsReducer\";\r\n\r\nexport const UPDATE_SELECTION = \"UPDATE_SELECTION\"\r\nexport const DELETE_SELECTION = \"DELETE_SELECTION\"\r\n\r\nconst SelectedItemsReducer = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n        case UPDATE_SELECTION:\r\n            return payload;\r\n        case DELETE_SELECTION:\r\n            return {};\r\n            case RESET:\r\n                return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default SelectedItemsReducer;\r\n","import Cookie from \"js-cookie\";\r\nimport { RESET } from \"./AllProductsReducer\";\r\n\r\nexport const SET_GLOBAL_NAME = \"SET_GLOBAL_NAME\";\r\n\r\nconst GlobalNameReducer = (state = Cookie.get(\"globalName\") || \"\", { type, payload }) => {\r\n    switch (type) {\r\n        case SET_GLOBAL_NAME:\r\n            return payload;\r\n        case RESET:\r\n            return Cookie.get(\"globalName\");\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default GlobalNameReducer;\r\n","import { RESET } from \"./AllProductsReducer\";\r\n\r\nexport const UPDATE_SHIPPING_DETAILS = \"UPDATE_SHIPPING_DETAILS\"\r\n\r\nconst ShippingDetailsReducer=(state={}, {type, payload})=>{\r\n    switch (type) {\r\n        case UPDATE_SHIPPING_DETAILS:\r\n         return payload  \r\n         case RESET:\r\n             return {}; \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ShippingDetailsReducer","export const GET_ALL_PRODUCTS = \"GET_ALL_PRODUCTS\";\r\nexport const RESET = \"RESET\"\r\n\r\nconst AllProductsReducer = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n        case GET_ALL_PRODUCTS:\r\n            return payload;\r\n        case RESET:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AllProductsReducer;\r\n","const { UPDATE_T0_CART, DELETE_FROM_CART } = require(\"../Reducers/CartItemsReducer\");\r\n\r\nexport const updateToCart = (payload)=>({\r\n    type : UPDATE_T0_CART,\r\n    payload : payload\r\n})\r\n\r\nexport const deleteFromCart=(payload)=>({\r\n    type : DELETE_FROM_CART,\r\n    payload : payload\r\n})\r\n","const { UPDATE_QUANTITY_IN_CART } = require(\"../Reducers/QuantityReducer\");\r\n\r\nconst UpdateQuantity = (payload) => ({\r\n    type    : UPDATE_QUANTITY_IN_CART,\r\n    payload : payload\r\n});\r\n\r\nexport const UpdateDelete=(payload)=>({\r\n    type : UPDATE_QUANTITY_IN_CART,\r\n    payload : payload\r\n})\r\nexport default UpdateQuantity;\r\n","import React, { useState} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {  updateToCart } from \"../Redux/Actions.js/UpdateCartItem\";\r\nimport UpdateQuantity from \"../Redux/Actions.js/UpdateQuantity\";\r\n\r\nfunction SelectedProduct() {\r\n    const selectedProduct = useSelector((state) => state.selectedProduct);\r\n    const dispatch = useDispatch();\r\n\r\n    const [ initialSelection, setInitialSelection ] = useState(1);\r\n    const addToCart = (item) => {\r\n        dispatch(updateToCart(item));\r\n        dispatch(UpdateQuantity({ [selectedProduct._id]: initialSelection }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ margin: \"3rem 0rem 0rem 0.5rem\" }}>\r\n                <Link to=\"/\">Back to results</Link>\r\n            </div>\r\n            <div className=\"selectedProductBox\">\r\n                <div className=\"selectedImage\">\r\n                    {\" \"}\r\n                    <img src={selectedProduct.image} alt=\"product logo\" />\r\n                </div>\r\n                <div className=\"selectedDetails\">\r\n                    <div>\r\n                        <b>{selectedProduct.title}</b>\r\n                    </div>\r\n                    <div>0 Stars</div>\r\n                    <div>(0 Customer Reviews)</div>\r\n                    <div>\r\n                        <b>Price :</b> <b>${selectedProduct.price}</b>\r\n                    </div>\r\n                    <div>\r\n                        <b>Description:</b> {selectedProduct.description}\r\n                    </div>\r\n                </div>\r\n                <div className=\"selectToCartDetails\">\r\n                    <div>Price ${selectedProduct.price}</div>\r\n                    <div>Status: In Stock</div>\r\n                    <div>\r\n                        Qty :{\" \"}\r\n                        <select\r\n                            value={initialSelection}\r\n                            onChange={(e) => {\r\n                                setInitialSelection(e.target.value);\r\n                            }}\r\n                        >\r\n                            {Array(selectedProduct.quantity).fill(\"x\").map((v, index) => {\r\n                                return <option key={index}>{index + 1}</option>;\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <Link to=\"/cart\">\r\n                        {\" \"}\r\n                        <button onClick={() => addToCart(selectedProduct)}>Add to cart</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectedProduct;\r\n","const { UPDATE_SELECTION, DELETE_SELECTION } = require(\"../Reducers/SelectedItemsReducer\");\r\n\r\nconst UpdateSelectedItems = (payload) => ({\r\n    type    : UPDATE_SELECTION,\r\n    payload : payload\r\n});\r\n\r\nexport const DeleteSelectedItem=(payload)=>(\r\n    {\r\n        type : DELETE_SELECTION,\r\n        payload: payload\r\n    }\r\n)\r\n\r\nexport default UpdateSelectedItems","const { GET_ALL_PRODUCTS } = require(\"../Reducers/AllProductsReducer\");\r\n\r\nconst UpdateAllProducts = (payload)=>({\r\n    type : GET_ALL_PRODUCTS,\r\n    payload : payload\r\n})\r\n\r\nexport default UpdateAllProducts;","const { RESET } = require(\"./AllProductsReducer\");\r\nexport const FILTER_JEWELRY = \"FILTER_JEWELRY\";\r\nexport const FILTER_MEN_CLOTHING = \"FILTER_MEN_CLOTHING\";\r\nexport const FILTER_WOMEN_CLOTHING = \"FILTER_WOMEN_CLOTHING\";\r\nexport const FILTER_ELECRONICS = \"FILTER_ELECTRONICS\";\r\nexport const FILTER_ALL= \"FILTER_ALL\"\r\n\r\nconst FilterProductReducer = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n        case FILTER_JEWELRY:\r\n            return payload.filter((val) => val.category === \"jewelery\");\r\n        case FILTER_MEN_CLOTHING:\r\n            return payload.filter((val) => val.category === \"men clothing\");\r\n        case FILTER_WOMEN_CLOTHING:\r\n            return payload.filter((val) => val.category === \"women clothing\");\r\n        case FILTER_ELECRONICS:\r\n            return payload.filter((val) => val.category === \"electronics\");\r\n        case FILTER_ALL:\r\n            return payload\r\n        case RESET:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default FilterProductReducer;\r\n","import {\r\n    FILTER_JEWELRY,\r\n    FILTER_MEN_CLOTHING,\r\n    FILTER_WOMEN_CLOTHING,\r\n    FILTER_ELECRONICS,\r\n    FILTER_ALL\r\n} from \"../Reducers/FilterProductReducer\";\r\n\r\nexport const filterJewellery = (payload) => ({\r\n    type    : FILTER_JEWELRY,\r\n    payload : payload\r\n});\r\n\r\nexport const filterMenClothing = (payload) => ({\r\n    type    : FILTER_MEN_CLOTHING,\r\n    payload : payload\r\n});\r\n\r\nexport const filterWomenClothing = (payload) => ({\r\n    type    : FILTER_WOMEN_CLOTHING,\r\n    payload : payload\r\n});\r\n\r\nexport const filterElectronics = (payload) => ({\r\n    type    : FILTER_ELECRONICS,\r\n    payload : payload\r\n});\r\n\r\nexport const filterAll=(payload)=>({\r\n    type : FILTER_ALL,\r\n    payload : payload\r\n})\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport UpdateCartItems from \"../Redux/Actions.js/UpdateSelectedItems\";\r\nimport UpdateAllProducts from \"../Redux/Actions.js/UpdateAllProducts\";\r\nimport { filterAll } from \"../Redux/Actions.js/FilterActions\";\r\n\r\nfunction HomeScreen() {\r\n    const dispatch = useDispatch();\r\n    const filteredProducts = useSelector(state=>state.filteredProducts)\r\n\r\n    useEffect(() => {\r\n        axios.get(\"/api/products/\").then((response) => {\r\n            if (response) {\r\n                dispatch(UpdateAllProducts(response.data));\r\n                if(filteredProducts.length < 1){\r\n                    dispatch(filterAll(response.data))\r\n                }\r\n            }\r\n        });\r\n    }, [dispatch, filteredProducts.length]);\r\n\r\n    const addToCart = (item) => {\r\n        dispatch(UpdateCartItems(item));\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"itemGallery\">\r\n            {filteredProducts.map((val) => (\r\n                <div key={val._id} className=\"itemBox\">\r\n                    <div className=\"itemImageBox\">\r\n                        <Link to={`selectedproduct/${val._id}`}>\r\n                            {\" \"}\r\n                            <img src={val.image} onClick={() => addToCart(val)} alt=\"slim shirt\" />\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"itemName\">\r\n                        <Link to={`selectedproduct/${val._id}`} onClick={() => addToCart(val)}>\r\n                            <b>{val.title}</b>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"itemBrand\">{val.category}</div>\r\n                    <div className=\"itemPrice\">\r\n                        <b>${val.price}</b>\r\n                    </div>\r\n                    <div className=\"itemRating\">0 stars (0 Reviews)</div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteFromCart } from \"../Redux/Actions.js/UpdateCartItem\";\r\nimport UpdateQuantity, { UpdateDelete } from \"../Redux/Actions.js/UpdateQuantity\";\r\n\r\nfunction CartScreen(props) {\r\n    // const id = props.match.paramsitem._id;\r\n    const dispatch = useDispatch();\r\n\r\n    const cartItems = useSelector((state) => state.cartItems);\r\n    const selectedQuantity = useSelector((state) => state.selectedQuantity);\r\n    const globalName = useSelector((state) => state.globalName);\r\n\r\n    const totalItems = () => {\r\n        let sum = 0;\r\n        for (let key in selectedQuantity) {\r\n            sum = Number(selectedQuantity[key]) + sum;\r\n        }\r\n        return sum;\r\n    };\r\n\r\n    const calculatedPrice = (item) => {\r\n        let totalPrice = Number(selectedQuantity[item._id] * item.price);\r\n\r\n        return totalPrice.toFixed(2);\r\n    };\r\n\r\n    const totalPrice = () => {\r\n        const priceArray = cartItems.map((val) => selectedQuantity[val._id] * val.price);\r\n        let sum = 0;\r\n        for (let i of priceArray) {\r\n            sum = i + sum;\r\n        }\r\n\r\n        return sum.toFixed(2);\r\n    };\r\n\r\n    const deleteItem = (item) => {\r\n        dispatch(deleteFromCart(item));\r\n        delete selectedQuantity[item._id];\r\n        dispatch(UpdateDelete(selectedQuantity));\r\n    };\r\n\r\n    return (\r\n        <div className=\"cartBox\">\r\n            <div className=\"cartDetails\">\r\n                <div className=\"shoppingCartHeaderTop\">\r\n                    <div className=\"cartTitle\">Shopping Cart</div>\r\n                    <div>Price</div>\r\n                </div>\r\n                <div>\r\n                    {cartItems.length > 0 ? (\r\n                        cartItems.map((val) => (\r\n                            <div className=\"shoppingCartHeaderDetails\" key={val._id}>\r\n                                <div className=\"cartItemBox\">\r\n                                    <div>\r\n                                        <img src={val.image} alt=\"slim shirt\" />\r\n                                    </div>\r\n                                    <div className=\"cartQuantity\">\r\n                                        <div>{val.title}</div>\r\n                                        <div>\r\n                                            Qty :{\" \"}\r\n                                            <select\r\n                                                value={selectedQuantity[val._id]}\r\n                                                onChange={(e) => {\r\n                                                    dispatch(UpdateQuantity({ [val._id]: e.target.value }));\r\n                                                }}\r\n                                            >\r\n                                                {Array(val.quantity).fill(\"x\").map((v, i) => {\r\n                                                    return <option key={i}>{i + 1}</option>;\r\n                                                })}\r\n                                            </select>\r\n                                            <button onClick={() => deleteItem(val)}>delete</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <b>${calculatedPrice(val)}</b>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <div style={{ padding: \"1rem\" }}>No items are in the cart</div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"cartSubtotalBox\">\r\n                <div>\r\n                    Subtotal ({totalItems()} items): ${totalPrice()}\r\n                </div>\r\n                <div>\r\n                    <Link to={globalName ? \"/shipping\" : \"/signin/redirect?=true\"}>\r\n                        <button disabled={totalItems() < 1}>{totalItems() < 1 ? \"\" : \"Proceed to checkout\"}</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartScreen;\r\n","const { SET_GLOBAL_NAME } = require(\"../Reducers/GlobalNameReducer\")\r\n\r\nconst UpdateGlobalName = (payload)=>({\r\n    type : SET_GLOBAL_NAME,\r\n    payload : payload\r\n})\r\n\r\nexport default UpdateGlobalName;","import React from 'react'\r\n\r\nfunction InputDiv(props) {\r\n    return (\r\n        <div className=\"inputDiv\">\r\n                        <label htmlFor={props.tag}>\r\n                            <div>\r\n                                <b>{props.tag}</b>\r\n                            </div>\r\n                            <div>\r\n                                <input type={props.type} value={props.value} onChange={props.onChange} required/>\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n    )\r\n}\r\n\r\nexport default InputDiv\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Cookie from \"js-cookie\";\r\nimport UpdateGlobalName from \"../Redux/Actions.js/UpdateGlobalName\";\r\nimport InputDiv from \"../Components/InputDiv\";\r\n\r\nfunction SignInScreen(props) {\r\n    const [ email, setEmail ] = useState(\"\");\r\n    const [ password, setPassword ] = useState(\"\");\r\n\r\n    const [ validationError, setValidationError ] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios\r\n            .post(\"/api/users/signin\", { email, password })\r\n            .then((response) => {\r\n                const token = response.data.token;\r\n                try {\r\n                    if (response.data.msg) {\r\n                        setValidationError(response.data.msg);\r\n                    }\r\n                    else {\r\n                        setValidationError(\"\");\r\n                    }\r\n                } catch (error) {\r\n                    // do nothing\r\n                }\r\n\r\n                if (token) {\r\n                    Cookie.set(\"token\", token);\r\n                    Cookie.set(\"globalName\", response.data.name);\r\n                    dispatch(UpdateGlobalName(response.data.name));\r\n\r\n                    if (props.location.pathname.includes(\"redirect\")) {\r\n                        props.history.push(\"/shipping\");\r\n                    }\r\n                    else {\r\n                        props.history.push(\"/\");\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setValidationError(err.response.data.validationError[0].msg);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <center>\r\n            <center className=\"signInDiv\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"signInHeader\">\r\n                        <b>Sign-in</b>\r\n                    </div>\r\n                    {validationError ? (\r\n                        <div style={{ color: \"red\" }} className=\"inputDiv\">\r\n                            {validationError}\r\n                        </div>\r\n                    ) : (\r\n                        <span />\r\n                    )}\r\n\r\n                    <InputDiv tag=\"Email\" type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n\r\n                    <InputDiv\r\n                        tag=\"Password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n\r\n                    <div className=\"inputDiv\">\r\n                        <button type=\"submit\" className=\"signInBtn\">\r\n                            S I G N&nbsp; I N\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"inputDiv\">\r\n                        <div>\r\n                            <b>New to Amazona?</b>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"inputDiv\">\r\n                        <Link to=\"/createaccount\">\r\n                            <div className=\"createAccBtn\">Create your Amazona account</div>\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </center>\r\n        </center>\r\n    );\r\n}\r\n\r\nexport default SignInScreen;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Cookie from \"js-cookie\";\r\nimport UpdateGlobalName from \"../Redux/Actions.js/UpdateGlobalName\";\r\nimport InputDiv from \"../Components/InputDiv\";\r\n\r\nfunction CreateAccount(props) {\r\n    const [ name, setName ] = useState(\"\");\r\n    const [ email, setEmail ] = useState(\"\");\r\n    const [ password, setPassword ] = useState(\"\");\r\n    const [ confirmPassword, setConfirmPassword ] = useState(\"\");\r\n    const [ validationError, setValidationError ] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password === confirmPassword) {\r\n            axios\r\n                .post(\"api/users/register\", { name, email, password })\r\n                .then((response) => {\r\n                    try {\r\n                        if (response.data.msg) {\r\n                            setValidationError(response.data.msg);\r\n                        }\r\n                        else {\r\n                            setValidationError(\"\");\r\n                        }\r\n                    } catch (error) {}\r\n\r\n                    Cookie.set(\"token\", response.data.token);\r\n                    dispatch(UpdateGlobalName(response.data.name));\r\n                    Cookie.set(\"globalName\", response.data.name);\r\n                    if (response.data.token) {\r\n                        props.history.push(\"/\");\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    try {\r\n                        setValidationError(err.response.data.validationError[0].msg);\r\n                    } catch (error) {}\r\n                });\r\n        }\r\n        else {\r\n            //show user info that passwords do not match\r\n            setValidationError(\"Passwords do not match\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <center>\r\n            <center className=\"signInDiv\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"signInHeader\">\r\n                        <b>Create Account</b>\r\n                    </div>\r\n                    {validationError ? (\r\n                        <div style={{ color: \"red\" }} className=\"inputDiv\">\r\n                            {validationError}\r\n                        </div>\r\n                    ) : (\r\n                        <span />\r\n                    )}\r\n\r\n                    <InputDiv tag=\"name\" type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                    <InputDiv tag=\"Email\" type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    <InputDiv tag=\"Password\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                    <InputDiv\r\n                        tag=\"Re-enter Password\"\r\n                        type=\"password\"\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    />\r\n\r\n                    <div className=\"inputDiv\">\r\n                        <button className=\"signInBtn\" type=\"submit\">\r\n                            Create your amazona account\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"inputDiv\">\r\n                        <div>\r\n                            <b>Already have an account?</b> &nbsp; <Link to=\"/signin\">Sign in</Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </center>\r\n        </center>\r\n    );\r\n}\r\n\r\nexport default CreateAccount;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Cookie from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport UpdateAllProducts from \"../Redux/Actions.js/UpdateAllProducts\";\r\n\r\nfunction CreateProduct() {\r\n    const dispatch = useDispatch();\r\n    const products = useSelector((state) => state.products);\r\n\r\n    useEffect(\r\n        () => {\r\n            axios.get(\"/api/products/\").then((response) => {\r\n                if (response) {\r\n                    dispatch(UpdateAllProducts(response.data));\r\n                }\r\n            });\r\n        },\r\n        [ dispatch ]\r\n    );\r\n    const [ updateProduct, setUpdateProduct ] = useState(false);\r\n    const [ identity, setIdentity ] = useState(\"empty\");\r\n    const [ name, setName ] = useState(\"\");\r\n    const [ price, setPrice ] = useState(\"\");\r\n    const [ category, setCategory ] = useState(\"\");\r\n    const [ image, setImage ] = useState(\"\");\r\n    const [ brand, setBrand ] = useState(\"\");\r\n    const [ description, setDescription ] = useState(\"\");\r\n    const [ quantity, setQuantity ] = useState(\"\");\r\n    const [ rating, setRating ] = useState(\"\");\r\n    const [ numOfReviews, setNumOfReviews ] = useState(\"\");\r\n\r\n    const [ showProducts, setShowProducts ] = useState(true);\r\n    const token = Cookie.get(\"token\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const productToSend = {\r\n            title        : name,\r\n            price,\r\n            category,\r\n            brand,\r\n            description,\r\n            image,\r\n            quantity,\r\n            rating,\r\n            numOfReviews : numOfReviews\r\n        };\r\n        if (updateProduct) {\r\n            axios\r\n                .put(\"/api/products/updateproduct\", Object.assign({}, productToSend, { identity }), {\r\n                    headers : { authorization: `Bearer ${token}` }\r\n                })\r\n                .then((response) => console.log(response.data))\r\n                .catch((err) => console.log(err));\r\n        }\r\n        else {\r\n            axios\r\n                .post(\"/api/products/createproduct\", productToSend, { headers: { authorization: `Bearer ${token}` } })\r\n                .then((response) => console.log(response.data))\r\n                .catch((err) => console.log(err));\r\n        }\r\n\r\n        setShowProducts(true);\r\n        setUpdateProduct(false);\r\n        setTimeout(() => {\r\n            axios.get(\"/api/products/\").then((response) => {\r\n                if (response) {\r\n                    dispatch(UpdateAllProducts(response.data));\r\n                }\r\n            });\r\n        }, 500);\r\n    };\r\n\r\n    const editProduct = (item) => {\r\n        setShowProducts(false);\r\n        setIdentity(item._id);\r\n        setName(item.title);\r\n        setPrice(item.price);\r\n        setCategory(item.category);\r\n        setBrand(item.brand);\r\n        setDescription(item.description);\r\n        setImage(item.image);\r\n        setQuantity(item.quantity);\r\n        setRating(item.rating);\r\n        setNumOfReviews(item.numOfReviews);\r\n        setUpdateProduct(true);\r\n    };\r\n\r\n    const deleteProduct = (id) => {\r\n        const token = Cookie.get(\"token\");\r\n\r\n        axios\r\n            .delete(\"/api/products/deleteproduct\", {\r\n                params  : { id: id },\r\n                headers : { authorization: `Bearer ${token}` }\r\n            })\r\n            .then((responser) => {\r\n                axios.get(\"/api/products/\").then((response) => {\r\n                    if (response) {\r\n                        dispatch(UpdateAllProducts(response.data));\r\n                    }\r\n                });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"createProduct\">\r\n            <div>\r\n                <button\r\n                    style={{ padding: \"0.5rem\", margin: \"0.5rem\" }}\r\n                    onClick={() => {\r\n                        setIdentity(\"\");\r\n                        setName(\"\");\r\n                        setPrice(\"\");\r\n                        setCategory(\"\");\r\n                        setBrand(\"\");\r\n                        setDescription(\"\");\r\n                        setImage(\"\");\r\n                        setQuantity(\"\");\r\n                        setRating(\"\");\r\n                        setNumOfReviews(\"\");\r\n                        setShowProducts(!showProducts);\r\n                        axios.get(\"/api/products/\").then((response) => {\r\n                            if (response) {\r\n                                dispatch(UpdateAllProducts(response.data));\r\n                            }\r\n                        });\r\n                    }}\r\n                >\r\n                    {showProducts ? \"create product\" : \"Show Products\"}\r\n                </button>\r\n            </div>\r\n\r\n            {\r\n                <div>\r\n                    {showProducts ? (\r\n                        <div>\r\n                            <div className=\"createTableTitle\">Products</div>\r\n                            <table className=\"createProductTable\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>id</th>\r\n\r\n                                        <th>Name</th>\r\n\r\n                                        <th>Price</th>\r\n\r\n                                        <th>Category</th>\r\n\r\n                                        <th>Brand</th>\r\n\r\n                                        <th>Description</th>\r\n\r\n                                        <th>Rating</th>\r\n\r\n                                        <th>Number of Reviews</th>\r\n\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {products.map((val) => {\r\n                                        return (\r\n                                            <tr key={val._id}>\r\n                                                <td>{val._id}</td>\r\n                                                <td>{val.title}</td>\r\n                                                <td>${val.price}</td>\r\n                                                <td>{val.category}</td>\r\n                                                <td>{val.brand}</td>\r\n                                                <td>{val.description}</td>\r\n                                                <td>{val.rating}</td>\r\n                                                <td>{val.numOfReviews}</td>\r\n                                                <td>\r\n                                                    <button onClick={() => editProduct(val)}>Edit</button>{\" \"}\r\n                                                    <button onClick={() => deleteProduct(val._id)}>Delete</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    ) : (\r\n                        <center>\r\n                            <center className=\"signInDiv\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"signInHeader\">\r\n                                        <b>{updateProduct ? \"Update Product\" : \"Create Product\"}</b>\r\n                                    </div>\r\n                                    <div className=\"inputDiv\">\r\n                                        <label htmlFor=\"Name\">\r\n                                            <div>\r\n                                                <b>Name</b>\r\n                                            </div>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={name}\r\n                                                    onChange={(e) => setName(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"inputDiv\">\r\n                                        <label htmlFor=\"Price\">\r\n                                            <div>\r\n                                                <b>Price</b>\r\n                                            </div>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    value={price}\r\n                                                    onChange={(e) => setPrice(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"inputDiv\">\r\n                                        <label htmlFor=\"Price\">\r\n                                            <div>\r\n                                                <b>Brand</b>\r\n                                            </div>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={brand}\r\n                                                    onChange={(e) => setBrand(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"inputDiv\">\r\n                                        <label htmlFor=\"Image\">\r\n                                            <div>\r\n                                                <b>Image</b>\r\n                                            </div>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={image}\r\n                                                    onChange={(e) => setImage(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"inputDiv\">\r\n                                        <label htmlFor=\"Count in stock\">\r\n                                            <div>\r\n                                                <b>Count in stock</b>\r\n                                            </div>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    value={quantity}\r\n                                                    onChange={(e) => setQuantity(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"inputDiv\">\r\n                                        <label htmlFor=\"Description\">\r\n                                            <div>\r\n                                                <b>Description</b>\r\n                                            </div>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={description}\r\n                                                    onChange={(e) => setDescription(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"inputDiv\">\r\n                                        <label htmlFor=\"Category\">\r\n                                            <div>\r\n                                                {\" \"}\r\n                                                <b>Category</b>{\" \"}\r\n                                            </div>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={category}\r\n                                                    onChange={(e) => setCategory(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"inputDiv\">\r\n                                        <label htmlFor=\"Rating\">\r\n                                            <div>\r\n                                                <b>Rating</b>\r\n                                            </div>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    value={rating}\r\n                                                    onChange={(e) => setRating(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"inputDiv\">\r\n                                        <label htmlFor=\"Number of reviews\">\r\n                                            <div>\r\n                                                <b>Number of reviews</b>\r\n                                            </div>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    value={numOfReviews}\r\n                                                    onChange={(e) => setNumOfReviews(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n\r\n                                    <div className=\"inputDiv\">\r\n                                        <button type=\"submit\" className=\"signInBtn\" style={{ marginLeft: \"-0.2rem\" }}>\r\n                                            {updateProduct ? \"Update Product\" : \"Create Product\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </center>\r\n                        </center>\r\n                    )}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateProduct;\r\n","import React from \"react\";\r\n\r\nfunction StepComponent({ step1, step2, step3, step4 }) {\r\n    return (\r\n        <div className=\"stepStrip\">\r\n            <div style={step1}>Sign-in</div>\r\n            <div style={step2}>Shipping</div>\r\n            <div style={step3}>Payment</div>\r\n            <div style={step4}>PlaceOrder</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StepComponent;\r\n","const { UPDATE_SHIPPING_DETAILS } = require(\"../Reducers/ShippingDetailsReducer\");\r\n\r\nconst UpdateShippingDetails = (payload)=>({\r\n    type : UPDATE_SHIPPING_DETAILS,\r\n    payload : payload\r\n})\r\n\r\nexport default UpdateShippingDetails","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport StepComponent from \"../Components/StepComponent\";\r\nimport UpdateShippingDetails from \"../Redux/Actions.js/UpdateShippingDetails\";\r\nimport InputDiv from \"../Components/InputDiv\";\r\n\r\nfunction ShippingScreen(props) {\r\n    const step1 = { borderTop: \"0.5rem solid #ffa500\" };\r\n    const step2 = { borderTop: \"0.5rem solid #ffa500\" };\r\n    const step3 = { borderTop: \"0.5rem solid #c0c0c0\" };\r\n    const step4 = { borderTop: \"0.5rem solid #c0c0c0\" };\r\n\r\n    const shippingDetails = useSelector((state) => state.shippingDetails);\r\n    const dispatch = useDispatch();\r\n\r\n    const continueToPayment = (e) => {\r\n        e.preventDefault();\r\n\r\n        props.history.push(\"/payment\");\r\n    };\r\n\r\n    return (\r\n        <center>\r\n            <StepComponent step1={step1} step2={step2} step3={step3} step4={step4} />\r\n            <center className=\"signInDiv\">\r\n                <form onSubmit={continueToPayment}>\r\n                    <div className=\"signInHeader\">\r\n                        <b>Shipping To</b>\r\n                    </div>\r\n\r\n                    <InputDiv\r\n                        tag=\"Address\"\r\n                        type=\"text\"\r\n                        value={shippingDetails.address}\r\n                        onChange={(e) => {\r\n                            dispatch(\r\n                                UpdateShippingDetails({\r\n                                    address       : e.target.value,\r\n                                    city          : shippingDetails.city,\r\n                                    postalCode    : shippingDetails.postalCode,\r\n                                    country       : shippingDetails.country,\r\n                                    paymentMethod : \"\"\r\n                                })\r\n                            );\r\n                        }}\r\n                    />\r\n                    <InputDiv\r\n                        tag=\"City\"\r\n                        type=\"text\"\r\n                        value={shippingDetails.city}\r\n                        onChange={(e) => {\r\n                            dispatch(\r\n                                UpdateShippingDetails({\r\n                                    address       : shippingDetails.address,\r\n                                    city          : e.target.value,\r\n                                    postalCode    : shippingDetails.postalCode,\r\n                                    country       : shippingDetails.country,\r\n                                    paymentMethod : \"\"\r\n                                })\r\n                            );\r\n                        }}\r\n                    />\r\n                    <InputDiv\r\n                        tag=\"Postal Code\"\r\n                        type=\"text\"\r\n                        value={shippingDetails.postalCode}\r\n                        onChange={(e) => {\r\n                            dispatch(\r\n                                UpdateShippingDetails({\r\n                                    address       : shippingDetails.address,\r\n                                    city          : shippingDetails.address,\r\n                                    postalCode    : e.target.value,\r\n                                    country       : shippingDetails.country,\r\n                                    paymentMethod : \"\"\r\n                                })\r\n                            );\r\n                        }}\r\n                    />\r\n                    <InputDiv\r\n                        tag=\"Country\"\r\n                        type=\"text\"\r\n                        value={shippingDetails.country}\r\n                        onChange={(e) => {\r\n                            dispatch(\r\n                                UpdateShippingDetails({\r\n                                    address       : shippingDetails.address,\r\n                                    city          : shippingDetails.address,\r\n                                    postalCode    : shippingDetails.postalCode,\r\n                                    country       : e.target.value,\r\n                                    paymentMethod : \"\"\r\n                                })\r\n                            );\r\n                        }}\r\n                    />\r\n\r\n                    <div className=\"inputDiv\">\r\n                        <button className=\"signInBtn\" type=\"submit\">\r\n                            Continue\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </center>\r\n        </center>\r\n    );\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport StepComponent from \"../Components/StepComponent\";\r\nimport UpdateShippingDetails from \"../Redux/Actions.js/UpdateShippingDetails\";\r\n\r\nfunction PaymentScreen(props) {\r\n    const step1 = { borderTop: \"0.5rem solid #ffa500\" };\r\n    const step2 = { borderTop: \"0.5rem solid #ffa500\" };\r\n    const step3 = { borderTop: \"0.5rem solid #ffa500\" };\r\n    const step4 = { borderTop: \"0.5rem solid #c0c0c0\" };\r\n\r\n    const dispatch = useDispatch();\r\n    const shippingDetails = useSelector((state) => state.shippingDetails);\r\n\r\n    const [ paymentMethod, setPaymentMethod ] = useState(\"\");\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (paymentMethod) {\r\n            dispatch(UpdateShippingDetails(Object.assign({}, shippingDetails, { paymentMethod: paymentMethod })));\r\n            props.history.push(\"/placeorder\");\r\n        }\r\n        else {\r\n            alert(\"Please choose a payment method\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <center>\r\n            <StepComponent step1={step1} step2={step2} step3={step3} step4={step4} />\r\n            <center className=\"signInDiv\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"signInHeader\">\r\n                        <b>Payment</b>\r\n                    </div>\r\n                    <div className=\"checkBoxDiv\">\r\n                        <label htmlFor=\"Paypal\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                name=\"paypal\"\r\n                                onChange={(e) => {\r\n                                    if (e.target.checked === true) {\r\n                                        setPaymentMethod(e.target.name);\r\n                                    }\r\n                                    else {\r\n                                        setPaymentMethod(\"\");\r\n                                    }\r\n                                }}\r\n                            />{\" \"}\r\n                            &nbsp;\r\n                            <b>Paypal</b>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"inputDiv\">\r\n                        <button className=\"signInBtn\" type=\"submit\">\r\n                            Continue\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </center>\r\n        </center>\r\n    );\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport StepComponent from \"../Components/StepComponent\";\r\n\r\nfunction PlaceOrderScreen(props) {\r\n    const step1 = { borderTop: \"0.5rem solid #ffa500\" };\r\n    const step2 = { borderTop: \"0.5rem solid #ffa500\" };\r\n    const step3 = { borderTop: \"0.5rem solid #ffa500\" };\r\n    const step4 = { borderTop: \"0.5rem solid #ffa500\" };\r\n\r\n    const shippingDetails = useSelector((state) => state.shippingDetails);\r\n    const cartItems = useSelector((state) => state.cartItems);\r\n    const selectedQuantity = useSelector((state) => state.selectedQuantity);\r\n\r\n    useEffect(\r\n        () => {\r\n            cartItems.length < 1 && props.history.push(\"/cart\");\r\n        },\r\n        [ cartItems, props.history]\r\n    );\r\n\r\n    const calculateTotalPrice = () => {\r\n        const PriceArray = cartItems.map((val) => val.price * selectedQuantity[val._id]);\r\n        let sum = 0;\r\n        for (let i of PriceArray) {\r\n            sum = i + sum;\r\n        }\r\n        return sum;\r\n    };\r\n\r\n    const calculateTax = () => {\r\n        return calculateTotalPrice() * 0.15;\r\n    };\r\n\r\n    const calculateShipping = () => {\r\n       if(cartItems.length < 40){\r\n           return 0\r\n       }else{\r\n           return calculateTotalPrice() * 0.1\r\n       }\r\n    };\r\n    const calculateOrderTotal = () => {\r\n        return calculateTotalPrice() + calculateTax() + calculateShipping();\r\n    };\r\n\r\n    return (\r\n        <div className=\"placeOrderBox\">\r\n            <StepComponent step1={step1} step2={step2} step3={step3} step4={step4} />\r\n            <div className=\"cartBox\">\r\n                <div className=\"cartDetails\">\r\n                    <div style={{ marginLeft: \"1rem\" }}>\r\n                        <b>Shipping</b>\r\n                    </div>\r\n                    <div style={{ marginLeft: \"1rem\" }}>\r\n                        {shippingDetails.address} {shippingDetails.city}, {shippingDetails.country}\r\n                    </div>\r\n                    <div style={{ marginLeft: \"1rem\" }}>\r\n                        <b>Payment</b>\r\n                    </div>\r\n                    <div style={{ marginLeft: \"1rem\" }}>Payment method : {shippingDetails.paymentMethod}</div>\r\n                    <div className=\"shoppingCartHeaderTop\">\r\n                        <div className=\"cartTitle\">Shopping Cart</div>\r\n                        <div>Price</div>\r\n                    </div>\r\n\r\n                    {cartItems.map((val) => {\r\n                        return (\r\n                            <div key={val._id} className=\"shoppingCartHeaderDetails\">\r\n                                <div className=\"cartItemBox\">\r\n                                    <div>\r\n                                        <img src={val.image} alt=\"Product Logo\" />\r\n                                    </div>\r\n                                    <div className=\"cartQuantity\">\r\n                                        <div>{val.title}</div>\r\n                                        <div>Qty : {selectedQuantity[val._id]}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <b>${val.price * selectedQuantity[val._id]}</b>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"cartSubtotalBox\">\r\n                    <div>\r\n                        <div>\r\n                            <button onClick={() => alert(\"Thank you for shopping with us\")}>Place order</button>\r\n                        </div>\r\n                        <div\r\n                            style={{\r\n                                display        : \"flex\",\r\n                                justifyContent : \"space-between\",\r\n                                fontSize       : \"small\",\r\n                                flexWrap       : \"wrap\"\r\n                            }}\r\n                        >\r\n                            <div>Items</div>\r\n                            <div>${calculateTotalPrice().toFixed(2)}</div>\r\n                        </div>\r\n                        <div\r\n                            style={{\r\n                                display        : \"flex\",\r\n                                justifyContent : \"space-between\",\r\n                                fontSize       : \"small\",\r\n                                flexWrap       : \"wrap\"\r\n                            }}\r\n                        >\r\n                            <div>Shipping</div>\r\n                            <div>${calculateShipping().toFixed(2)}</div>\r\n                        </div>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", fontSize: \"small\" }}>\r\n                            <div>Tax</div>\r\n                            <div>${calculateTax().toFixed(2)}</div>\r\n                        </div>\r\n                        <div\r\n                            style={{\r\n                                display        : \"flex\",\r\n                                justifyContent : \"space-between\",\r\n                                fontSize       : \"medium\",\r\n                                color          : \"red\",\r\n                                flexWrap       : \"wrap\"\r\n                            }}\r\n                        >\r\n                            <div>Order Total</div>\r\n                            <div>${calculateOrderTotal().toFixed(2)}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import React from 'react'\r\nimport Cookie from \"js-cookie\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { ResetAction } from '../Redux/Actions.js/ResetAction';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction Title(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const signOut = () => {\r\n        Cookie.set(\"token\", \"\");\r\n        Cookie.set(\"globalName\", \"\");\r\n        dispatch(ResetAction());\r\n\r\n        if (props.history) {\r\n            props.history.push(\"/\");\r\n        }\r\n    };\r\n\r\n    const globalName = useSelector((state) => state.globalName);\r\n    return (\r\n        <div className=\"appHeader\">\r\n        <div className=\"titleBox\">\r\n            <span className=\"appHamburger\">\r\n                <button onClick={props.showSideBar}>\r\n                    <b>&#9776;</b>\r\n                </button>\r\n            </span>{\" \"}\r\n            <span className=\"title\">\r\n                <Link to=\"/\">M E N U</Link>\r\n            </span>\r\n        </div>\r\n        <div className=\"cart_signin\">\r\n            <div className=\"cartLink\">\r\n                <Link to=\"/cart\">Cart</Link>\r\n            </div>{\" \"}\r\n            &nbsp;{\" \"}\r\n            <div className=\"signInLink\">\r\n                {globalName ? (\r\n                    <span>\r\n                        <button onClick={signOut}>Sign out</button>&nbsp; &nbsp;{\" \"}\r\n                        <Link to=\"#\">\r\n                            <i>Hello {globalName}</i>\r\n                        </Link>\r\n                    </span>\r\n                ) : (\r\n                    <Link to=\"/signin\">Sign in</Link>\r\n                )}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Title\r\n","import { RESET } from \"../Reducers/AllProductsReducer\";\r\n\r\nexport const ResetAction=()=>({\r\n    type : RESET\r\n})","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { filterElectronics, filterWomenClothing, filterJewellery, filterMenClothing, filterAll } from \"../Redux/Actions.js/FilterActions\";\r\n\r\nfunction SideBar(props) {\r\n    const dispatch = useDispatch();\r\n    const products = useSelector(state => state.products)\r\n\r\n    return (\r\n        <div ref={props.sideBarRef} className={props.sideBarClass}>\r\n            <div className=\"sideBarTitle\">\r\n                <div>Shopping Category</div>\r\n                <div>\r\n                    <button onClick={props.removeSideBar}>&times;</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"sideBarCategory\">\r\n                <Link to=\"#\" onClick={() => dispatch(filterAll(products))}>\r\n                    All categories\r\n                </Link>\r\n            </div>\r\n            <div className=\"sideBarCategory\">\r\n                <Link to=\"#\" onClick={() => dispatch(filterMenClothing(products))}>\r\n                    Men clothing\r\n                </Link>\r\n            </div>\r\n            <div className=\"sideBarCategory\">\r\n                <Link to=\"#\" onClick={() => dispatch(filterWomenClothing(products))}>\r\n                    Women clothing\r\n                </Link>\r\n            </div>\r\n            <div className=\"sideBarCategory\">\r\n                <Link to=\"#\" onClick={() => dispatch(filterElectronics(products))}>\r\n                    Electronics\r\n                </Link>\r\n            </div>\r\n            <div className=\"sideBarCategory\">\r\n                <Link to=\"#\" onClick={() => dispatch(filterJewellery(products))}>\r\n                    Jewellery\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookie from \"js-cookie\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport SelectedProduct from \"./Screens/SelectedProduct\";\r\nimport HomeScreen from \"./Screens/HomeScreen\";\r\nimport CartScreen from \"./Screens/CartScreen\";\r\nimport SignInScreen from \"./Screens/SignInScreen\";\r\nimport CreateAccount from \"./Screens/CreateAccount\";\r\nimport CreateProduct from \"./Screens/CreateProduct\";\r\nimport ShippingScreen from \"./Screens/ShippingScreen\";\r\nimport PaymentScreen from \"./Screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./Screens/PlaceOrderScreen\";\r\nimport Title from \"./Components/Title\";\r\nimport SideBar from \"./Components/SideBar\";\r\n\r\nfunction App() {\r\n    const [ sideBarClass, setsideBarClass ] = useState(\"sideBarGone\");\r\n\r\n    const isAuthenticated = Cookie.get(\"token\");\r\n\r\n    const sideBarRef = useRef();\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", handleSideBarOutsideClick);\r\n        return () => document.removeEventListener(\"mousedown\", handleSideBarOutsideClick);\r\n    }, []);\r\n\r\n    const handleSideBarOutsideClick = (e) => {\r\n        if (sideBarRef.current.contains(e.target)) {\r\n           //inside click\r\n           return;\r\n        }\r\n        else {\r\n            setsideBarClass(\"sideBarGone\"); //outside click\r\n        }\r\n    };\r\n\r\n    useEffect(\r\n        () => {\r\n            axios\r\n                .get(\"api/users/checkuser\", { headers: { authorization: `Bearer ${isAuthenticated}` } })\r\n                .then((response) => response.data)\r\n                .catch((err) => Cookie.set(\"token\", \"\"));\r\n        },\r\n        [ isAuthenticated ]\r\n    );\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"App\">\r\n                <Title showSideBar={() => setsideBarClass(\"sideBar\")} />\r\n\r\n                <SideBar\r\n                    sideBarRef={sideBarRef}\r\n                    removeSideBar={() => setsideBarClass(\"sideBarGone\")}\r\n                    sideBarClass={sideBarClass}\r\n                />\r\n\r\n                <div className=\"appBody\">\r\n                    <Switch>\r\n                        <Route path=\"/createaccount\" component={CreateAccount} />\r\n                        <Route path=\"/signin\" component={SignInScreen} />\r\n                        <Route path=\"/cart/:id?\" component={CartScreen} />\r\n                        <Route path=\"/selectedProduct/:id?\" component={SelectedProduct} />\r\n                        <Route path=\"/\" exact={true} component={HomeScreen} />\r\n                    </Switch>\r\n                    {isAuthenticated ? (\r\n                        <div>\r\n                            <Route path=\"/placeorder\" component={PlaceOrderScreen} />\r\n                            <Route path=\"/payment\" component={PaymentScreen} />\r\n                            <Route path=\"/shipping\" component={ShippingScreen} />\r\n                            <Route path=\"/createproduct\" component={CreateProduct} />\r\n                        </div>\r\n                    ) : (\r\n                        <Redirect to=\"/signin\" />\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"appFooter\">All Rights Reserved &copy; 2020</div>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport SelectedItemsReducer from \"./Reducers/SelectedItemsReducer\";\r\nimport CartItemsReducer from \"./Reducers/CartItemsReducer\";\r\nimport QuantityReducer from \"./Reducers/QuantityReducer\";\r\nimport AllProductsReducer from \"./Reducers/AllProductsReducer\";\r\nimport GlobalNameReducer from \"./Reducers/GlobalNameReducer\";\r\nimport ShippingDetailsReducer from \"./Reducers/ShippingDetailsReducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storageSession from \"redux-persist/lib/storage/session\";\r\nimport FilterProductReducer from \"./Reducers/FilterProductReducer\";\r\n\r\nconst persistConfig = {\r\n    key     : \"root\",\r\n    storage : storageSession\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    selectedProduct  : SelectedItemsReducer,\r\n    cartItems        : CartItemsReducer,\r\n    selectedQuantity : QuantityReducer,\r\n    products         : AllProductsReducer,\r\n    globalName       : GlobalNameReducer,\r\n    shippingDetails  : ShippingDetailsReducer,\r\n    filteredProducts   : FilterProductReducer\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n\r\nexport let store = createStore(\r\n    persistedReducer\r\n    // compose(\r\n    //     applyMiddleware(...middleware),\r\n    //     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    // )\r\n);\r\n\r\nexport let persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport {store} from \"./Redux/Store\";\nimport {persistor} from \"./Redux/Store\"\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}